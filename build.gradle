plugins {
  id 'java'
  id 'org.jastadd' version '1.13.3'
}

defaultTasks 'clean', 'jar'

if (!file('extendj/jastadd_modules').exists()) {
  throw new GradleException('ExtendJ seems to be missing. Please run "git submodule init", then "git submodule update".')
}

jastadd {
  configureModuleBuild()

  modules {
    include("extendj/jastadd_modules") // Include core ExtendJ modules.

    module "extendj-dit", {
      imports "java8 backend" // ExtendJ dependency for extendj-dit module.

      jastadd {
        basedir "src/jastadd/"
        include "**/*.ast"
        include "**/*.jadd"
        include "**/*.jrag"
      }

      scanner {
      	basedir "src/scanner"
	include "**/*.flex"
      }

      parser {
      	basedir "src/parser/"
	include "**/*.parser"
      }
    }
  }

  // Target module to build:
  module = 'extendj-dit'

  astPackage = 'org.extendj.ast'
  parser.name = 'JavaParser'
  scanner.name = 'OriginalScanner'
}

sourceSets.main {
  java {
    srcDir 'extendj/src/frontend-main'
    srcDir 'extendj/src/backend-main'
  }
  resources {
    srcDir 'extendj/src/res'
    srcDir jastadd.buildInfoDir
  }
}

test {
  description 'Run all tests except runtime tests.'
  outputs.upToDateWhen { false } // Always re-run tests.
  testLogging.exceptionFormat = "full"
}

// Use JavaCompiler if you need bytecode generation.
//jar.manifest.attributes 'Main-Class': 'org.extendj.JavaChecker'
jar.manifest.attributes 'Main-Class': 'org.extendj.JavaCompiler'
jar.destinationDir = projectDir

// Java -source and -target version.
sourceCompatibility = targetCompatibility = '1.8'

task sourceZip(type: Zip) {
  description 'Builds a Zip file with the entire repository (including the ExtendJ submodule).'
  destinationDir = projectDir
  archiveName = "extendj-dit-src.zip"

  from (projectDir) {
    exclude '**/.git'
    exclude '**/.gitignore'
    exclude '**/.gitattributes'
    exclude '**/.gitmodules'
    exclude 'build'
    exclude 'bin'
    exclude '.gradle'
    exclude '.classpath'
    exclude '.settings'
    exclude '.project'
    exclude '*.jar'
    exclude '*.zip'
    exclude '**/*.swp'
  }

  into 'extendj-dit'
}
